name: Reddit Automation Test

on:
  # Run on push to main branch
  push:
    branches: [ main, master ]
  
  # Run on pull requests
  pull_request:
    branches: [ main, master ]
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run on schedule (daily at 9 AM UTC)
  schedule:
    - cron: '0 9 * * *'

jobs:
  reddit-automation-test:
    runs-on: ubuntu-22.04  # Use Ubuntu 22.04 for better Playwright compatibility
    timeout-minutes: 15    # Prevent hanging workflows
    
    strategy:
      matrix:
        python-version: ["3.10"]
    
    steps:
    - name: 🚀 Checkout repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 📦 Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: 🔧 Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3-dev \
          libatk-bridge2.0-dev \
          libdrm2 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libgbm1 \
          libxss1 \
          libasound2 \
          xvfb
    
    - name: 🔧 Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🎭 Install Playwright browsers and dependencies
      run: |
        # Install Firefox browser
        python -m playwright install firefox
        
        # Install system dependencies for Firefox
        sudo python -m playwright install-deps firefox || true
        
        # Verify Firefox installation
        python -c "from playwright.sync_api import sync_playwright; print('✅ Playwright imported successfully')"
    
    - name: 🌍 Create environment file and configure CI
      env:
        REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
        REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
      run: |
        echo "REDDIT_USERNAME=$REDDIT_USERNAME" > .env
        echo "REDDIT_PASSWORD=$REDDIT_PASSWORD" >> .env
        echo "TEST_HEADLESS=true" >> .env
        echo "TEST_SLOW_MO=1000" >> .env
        echo "CI=true" >> .env
        
        # Set additional CI environment variables
        echo "CI=true" >> $GITHUB_ENV
        echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV
        echo "HEADLESS=true" >> $GITHUB_ENV
    
    - name: 🔍 Debug environment and verify setup
      run: |
        echo "🔍 Environment Debug Info:"
        echo "Python version: $(python --version)"
        echo "Current directory: $(pwd)"
        echo "Environment variables:"
        echo "  CI=$CI"
        echo "  GITHUB_ACTIONS=$GITHUB_ACTIONS" 
        echo "  HEADLESS=$HEADLESS"
        echo "Firefox check:"
        python -c "
        import os
        from playwright.sync_api import sync_playwright
        print(f'CI detected: {os.getenv(\"CI\")}')
        print(f'GITHUB_ACTIONS: {os.getenv(\"GITHUB_ACTIONS\")}')
        print(f'HEADLESS: {os.getenv(\"HEADLESS\")}')
        with sync_playwright() as p:
            print('✅ Playwright sync_playwright works')
            print(f'Firefox executable: {p.firefox.executable_path}')
        "
    
    - name: 🧪 Run Reddit Automation Test
      env:
        CI: true
        GITHUB_ACTIONS: true
        HEADLESS: true
        PYTHONPATH: ${{ github.workspace }}
        DISPLAY: ":99"
      run: |
        echo "🚀 Starting Reddit Automation Test in CI mode..."
        echo "Environment: CI=$CI, HEADLESS=$HEADLESS, GITHUB_ACTIONS=$GITHUB_ACTIONS"
        
        # Start Xvfb for virtual display (backup, shouldn't be needed in headless)
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        
        # Run the test with explicit headless configuration
        python -m pytest step_definitions/reddit_steps.py::test_reddit_automation \
          -v \
          --tb=short \
          --disable-warnings \
          --no-header \
          -s
    
    - name: 📊 Upload test results on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-failure-details-${{ github.run_number }}
        path: |
          .env
          **/*.log
          /tmp/playwright-*
          pytest_cache/
        retention-days: 3
        if-no-files-found: ignore
    
    - name: ✅ Test completion notification
      if: success()
      run: |
        echo "✅ Reddit Automation Test completed successfully!"
        echo ""
        echo "🎯 Validated Features:"
        echo "   • BDD test structure with Gherkin scenarios"
        echo "   • Reddit authentication and session management"
        echo "   • Gaming subreddit navigation and interaction"  
        echo "   • Smart post detection (excludes pinned/promoted)"
        echo "   • Nintendo content analysis with voting logic"
        echo "   • Automated logout with verification"
        echo "   • CI/CD integration with headless browser execution"
        echo ""
        echo "🚀 Test demonstrates enterprise-level automation capabilities!"
        echo "🎭 Executed in headless mode with full stealth configuration"
        echo "⚡ Optimized for CI/CD pipeline integration"
        echo ""
        echo "📊 Test Metrics:"
        echo "   • Framework: Pytest + BDD + Playwright"
        echo "   • Browser: Firefox (Headless)"
        echo "   • Platform: Ubuntu 22.04"
        echo "   • Python: ${{ matrix.python-version }}"
    
    - name: ❌ Test failure notification  
      if: failure()
      run: |
        echo "❌ Reddit Automation Test failed!"
        echo ""
        echo "📋 Common causes and troubleshooting:"
        echo "   • Reddit credentials not configured in GitHub Secrets"
        echo "   • Reddit rate limiting or temporary account restrictions"
        echo "   • Browser/dependency installation issues"
        echo "   • Network connectivity or DNS resolution problems"
        echo "   • Reddit website changes affecting selectors"
        echo ""
        echo "🔍 Check the uploaded artifacts for detailed logs and screenshots"
        echo "💡 Tip: Test locally first with 'python ci_test_runner.py'"
        echo "🔧 Ensure GitHub Secrets REDDIT_USERNAME and REDDIT_PASSWORD are set"
        echo ""
        echo "📞 Support Resources:"
        echo "   • Check Actions logs for specific error messages"
        echo "   • Verify Reddit account is not restricted"
        echo "   • Test with updated browser selectors if needed"